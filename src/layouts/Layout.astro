---
import '../styles/components.css';

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title} - Memorium</title>
    <link rel="icon" type="image/png" href="/favicon.png">
  </head>
  <body class="font-sans bg-gradient-to-br from-memorial-50 to-memorial-100 text-memorial-600 min-h-screen pt-16 md:pt-20">
    <header class="fixed top-0 left-0 right-0 bg-white border-b border-memorial-100 py-3 md:py-4 z-50">
      <div class="max-w-6xl mx-auto px-4 md:px-6">
        <div class="text-center">
          <div class="flex items-center justify-center">
            <svg class="w-6 h-6 md:w-8 md:h-8 mr-2 md:mr-3" viewBox="0 0 48 48" fill="none">
              <path d="M24 8C24 8 18 14 18 20C18 23.314 20.686 26 24 26C27.314 26 30 23.314 30 20C30 14 24 8 24 8Z" fill="#3d3d3d" opacity="0.6"/>
              <path d="M16 18L12 22L16 32L20 28" stroke="#3d3d3d" stroke-width="2" stroke-linecap="round"/>
              <path d="M32 18L36 22L32 32L28 28" stroke="#3d3d3d" stroke-width="2" stroke-linecap="round"/>
              <path d="M24 26V40" stroke="#3d3d3d" stroke-width="2" stroke-linecap="round"/>
            </svg>
            <h1 class="font-serif text-lg md:text-2xl text-memorial-600">Memorium</h1>
          </div>
          <p class="text-xs md:text-sm text-memorial-500 text-center">Preserve the past. Comfort the present. Connect forever.</p>
        </div>
      </div>
    </header>
    <main class="max-w-6xl mx-auto px-4 md:px-6 pt-6 md:pt-8"><slot /></main>
    
    <script>

      // Immediate click feedback for all links and buttons
      document.addEventListener('click', (e) => {
        const target = e.target as HTMLElement;
        const clickable = target.closest('a, button') as HTMLElement;
        if (clickable) {
          // Immediate visual feedback
          clickable.style.transform = 'scale(0.95)';
          clickable.style.transition = 'transform 0.1s ease-out';
          
          // Reset after a moment
          setTimeout(() => {
            clickable.style.transform = '';
            clickable.style.transition = '';
          }, 150);
        }
      });
      
      // Run on page load
      document.addEventListener('DOMContentLoaded', () => {
        const cards = document.querySelectorAll('.card');
        cards.forEach((card, index) => {
          (card as HTMLElement).style.animationDelay = `${index * 50}ms`;
        });
      });
    </script>
  </body>
</html>